name: Update Database Statistics

on:
  push:
    branches: [ main ]
    paths:
      - 'DrD-Jmena/**/*.json'
      - 'update_database_stats.py'
  pull_request:
    branches: [ main ]
    paths:
      - 'DrD-Jmena/**/*.json'
      - 'update_database_stats.py'
  workflow_dispatch: # Allows manual trigger

jobs:
  update-stats:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Update database statistics
      run: |
        echo "Running database statistics update..."
        python3 update_database_stats.py
    
    - name: Check if README was updated
      id: check-changes
      run: |
        if git diff --quiet README.md; then
          echo "changed=false" >> $GITHUB_OUTPUT
          echo "No changes to README.md"
        else
          echo "changed=true" >> $GITHUB_OUTPUT
          echo "README.md was updated with new statistics"
        fi
    
    - name: Commit and push changes
      if: steps.check-changes.outputs.changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add README.md
        git commit -m "ðŸ¤– Auto-update database statistics
        
        - Updated entry counts for all database tables
        - Last updated: $(date '+%Y-%m-%d %H:%M:%S UTC')
        
        [skip ci]"
        git push
    
    - name: Display statistics summary
      run: |
        echo "=== DATABASE STATISTICS SUMMARY ==="
        python3 -c "
        import json
        import glob
        import os
        
        total = 0
        tables = 0
        for file_path in sorted(glob.glob('DrD-Jmena/drd_table_*.json')):
            try:
                with open(file_path, 'r', encoding='utf-8') as f:
                    data = json.load(f)
                count = len(data.get('data', data)) if isinstance(data, dict) else len(data)
                total += count
                tables += 1
                filename = os.path.basename(file_path)
                print(f'  {filename}: {count:,} entries')
            except:
                pass
        
        print(f'\nðŸ“Š Total: {total:,} entries across {tables} tables')
        "